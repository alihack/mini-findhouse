<style lang="less">
@import '../styles/base.less';
.container {
	.reverse {flex-direction: row-reverse}
	.chat {
		padding:10rpx 30rpx 100rpx 30rpx;
		width: 100%;
		height: 1200rpx;
		box-sizing: border-box;
		&-item {
			margin:40rpx 0;
			.time {
				width: 220rpx;
				height: 40rpx;
				line-height: 40rpx;
				background: #CECECE;
				color: #ffffff;
				font-size: 24rpx;
				margin: 20rpx auto;
				text-align: center;
				border-radius:5rpx;
			}
			.main {
				display: flex;
				align-items: flex-start;
				margin-top: 20rpx;
				.avatar {
					width: 80rpx;
					height: 80rpx;
					border-radius: 80rpx;
				}
				.card {
					width: 450rpx;
					height: 460rpx;
					border-radius: 10rpx;
					background: #ffffff;
					margin:0 20rpx;
					image {
						border-top-right-radius:10rpx;
						border-top-left-radius:10rpx;
						width: 100%;
						height: 240rpx;
					}
					.title {
						font-size: 32rpx;
						font-weight: bold;
						padding: 10rpx 20rpx;
					}
					.detail {
						font-size: 24rpx;
						color: @gray;
						padding: 0rpx 20rpx;
					}
					.price {
						font-size: 30rpx;
						color: @gold;
						padding: 0rpx 20rpx;
						margin-top:10rpx;
					}
				}
				.content {
					background: #fff;
					max-width: 400rpx;
					padding: 20rpx 30rpx;
					border-radius: 10rpx;
					margin:0 20rpx;
				}
			}
		}
	}
	#bottom {
		width: 100%;
		height: 2rpx;
	}
	.fixed-bottom {
		.flex;
		width: 100%;
		height: 124rpx;
		position: fixed;
		bottom: 0;
		background: #fff;
		padding:0 30rpx;
		box-sizing: border-box;
		box-shadow: 0 -0rpx 5rpx #eaeaea;
		input {
			width: 600rpx;
			height: 124rpx;
		}
	}
}
</style>
<template>
	<view class="container">
		<scroll-view class='chat' id="chat" scroll-y scroll-top='{{scrollInto}}'>
			<block  wx:for="{{msgList}}" wx:key="index" wx:for-item="msg">
				<view class="chat-item">
					<view class='time'>{{msg.time}}</view>
					<view wx:for="{{msg.data}}" class="main {{item.isSelfSend ? 'reverse' : ''}}" wx:key="index">
						<image class="avatar" src="{{item.isSelfSend ? myAvatar: friendAvatar}}"></image>
						<!-- 房屋卡片 -->
						<view wx:if="{{item.houseCard}}">
							<view class="card">
								<image mode= "scaleToFill" src="{{item.houseCard.img}}"></image>
								<view class="title">{{item.houseCard.title}}</view>
								<view class="detail">{{item.houseCard.detail}}</view>
								<view class="price">{{item.houseCard.price}}</view>
							</view>
						</view>
						<view class="content" wx:if="{{item.html}}">{{item.html}}</view>
					</view>
				</view>
			</block>
			<view id="bottom"></view>
		</scroll-view>
		<!-- 固定尾部 -->
		<view class="fixed-bottom">
			<input placeholder="对Ta发送消息" bindconfirm="onInputConfirm" placeholder-style="line-height:124rpx" value="{{msgText}}"/>
		</view>
	</view>
</template>

<script>
import wepy from 'wepy'
import {sendMessage, getC2CHistoryMsgs, convertTime} from '../utils/util'
export default class Chat extends wepy.page {
	config = {
		navigationBarTitleText: '对话',
		navigationBarBackgroundColor: '#f5f5f5'
	}
	components = {
	}

	data = {
		myMessages: [{
			time: '12-21 10:30',
			isUserSend: true,
			avatar: '../images/banner.jpg',
			houseCard: {
				img: '../images/banner.jpg',
				title: '瑞景公园自主精装4房，采光视野好',
				detail: '4室2厅/158.14m2/东',
				price: '253万'
			}
		}, {
			time: '12-21 10:32',
			isUserSend: false,
			avatar: '../images/lu.jpeg',
			content: '您好，您发的房子还在售，有什么需要帮助的吗'
		}, {
			time: '12-21 10:33',
			isUserSend: true,
			avatar: '../images/banner.jpg',
			content: '能带我去看房吗？'
		}],
		msgList: [],
		friendAvatar: '',
		friendId: '',
		myAvatar: '',
		msgText: '',
		scrollInto: '',
		msgLength: 1
	}

	computed = {
	}

	watch = {
		msgLength() {
			// 自动滚动到底部,只要srcollInto的值大于窗口，就能到底部
			this.scrollInto = 60 + this.msgLength * 60
			this.$apply()
		}
	}

	events = {
	}
	async onLoad({friendId, friendAvatar}) {
		this.friendAvatar = friendAvatar
		this.friendId = friendId
		this.myAvatar = wepy.$instance.globalData.myUserInfo.headimg
		const data = await getC2CHistoryMsgs(friendId)
		this.msgList = data.newMsgList
		this.msgLength = data.Msglength
		this.$apply()
	}

	methods = {
		toMessage() {
			wepy.navigateTo({url: 'agent_message'})
		},
		toHome() {
			wepy.navigateTo({url: 'agent_home'})
		},
		quit () {
			wepy.navigateTo({url: 'login_wx'})
		},
		onInputConfirm: async ({detail: {value}}) => {
			this.msgText = value
			await sendMessage(value, this.friendId)
			// 向窗口添加一条消息
			const nowTime = convertTime(new Date().getTime())
			const item = {}
			item.html = value
			item.time = nowTime
			item.isSelfSend = true
			// 如果当前时间跟最后一条时间一样，并入最后一数组
			if (this.msgList[this.msgList.length - 1].time == nowTime) {
				this.msgList[this.msgList.length - 1].data.push(item)
			} else {
				this.msgList.push({time: nowTime, data: [item]})
			}
			this.msgText = ''
			this.msgLength ++
			this.$apply()
		}
	}
}
</script>
