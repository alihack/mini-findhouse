<style lang="less">
@import '../styles/base.less';
.container {
	.reverse {flex-direction: row-reverse}
	.chat {
		padding:10rpx 30rpx 100rpx 30rpx;
		width: 100%;
		box-sizing: border-box;
		&-item {
			margin:40rpx 0;
			.time {
				width: 160rpx;
				height: 40rpx;
				line-height: 40rpx;
				background: #CECECE;
				color: #ffffff;
				font-size: 24rpx;
				margin: 20rpx auto;
				text-align: center;
				border-radius:5rpx;
			}
			.main {
				display: flex;
				align-items: flex-start;
				.avatar {
					width: 100rpx;
					height: 100rpx;
					border-radius: 100rpx;
				}
				.card {
					width: 450rpx;
					height: 460rpx;
					border-radius: 10rpx;
					background: #ffffff;
					margin:0 20rpx;
					image {
						border-top-right-radius:10rpx;
						border-top-left-radius:10rpx;
						width: 100%;
						height: 240rpx;
					}
					.title {
						font-size: 32rpx;
						font-weight: bold;
						padding: 10rpx 20rpx;
					}
					.detail {
						font-size: 24rpx;
						color: @gray;
						padding: 0rpx 20rpx;
					}
					.price {
						font-size: 30rpx;
						color: @gold;
						padding: 0rpx 20rpx;
						margin-top:10rpx;
					}
				}
				.content {
					background: #fff;
					max-width: 400rpx;
					padding: 20rpx 30rpx;
					border-radius: 10rpx;
					margin:0 20rpx;
				}
			}
		}
	}
	.fixed-bottom {
		.flex;
		width: 100%;
		height: 124rpx;
		position: fixed;
		bottom: 0;
		background: #fff;
		padding:0 30rpx;
		box-sizing: border-box;
		box-shadow: 0 -0rpx 5rpx #eaeaea;
		input {
			width: 600rpx;
		}
	}
}
</style>
<template>
	<view class="container">
		<scroll-view class='chat' id="chat" scroll-y>
			<block  wx:for="{{myMessages}}" wx:key="index">
				<view class="chat-item" >
					<view class='time'>{{item.time}}</view>
					<view class="main {{item.isUserSend ? '' : 'reverse'}}">
						<image class="avatar" src="{{item.avatar}}"></image>
						<!-- 房屋卡片 -->
						<view wx:if="{{item.houseCard}}">
							<view class="card">
								<image mode= "scaleToFill" src="{{item.houseCard.img}}"></image>
								<view class="title">{{item.houseCard.title}}</view>
								<view class="detail">{{item.houseCard.detail}}</view>
								<view class="price">{{item.houseCard.price}}</view>
							</view>
						</view>
						<view class="content" wx:if="{{item.content}}">{{item.content}}</view>
					</view>
				</view>
			</block>
		</scroll-view>
		<!-- 固定尾部 -->
		<view class="fixed-bottom">
			<input placeholder="对Ta发送消息"/>
		</view>
	</view>
</template>

<script>
import wepy from 'wepy'
import webim from '../utils/webim_wx'
import {init, onConnNotify, onMsgNotify, sdkLogin} from '../utils/webim_handler'
export default class Chat extends wepy.page {
	config = {
		navigationBarTitleText: '对话',
		navigationBarBackgroundColor: '#f5f5f5'
	}
	components = {
	}

	data = {
		myMessages: [{
			time: '12-21 10:30',
			isUserSend: true,
			avatar: '../images/banner.jpg',
			houseCard: {
				img: '../images/banner.jpg',
				title: '瑞景公园自主精装4房，采光视野好',
				detail: '4室2厅/158.14m2/东',
				price: '253万'
			}
		}, {
			time: '12-21 10:32',
			isUserSend: false,
			avatar: '../images/lu.jpeg',
			content: '您好，您发的房子还在售，有什么需要帮助的吗'
		}, {
			time: '12-21 10:33',
			isUserSend: true,
			avatar: '../images/banner.jpg',
			content: '能带我去看房吗？'
		}]
	}

	computed = {
	}

	events = {
	}
	initIM () {
		init({
			accountMode: 0,
			accountType: 12345,
			sdkAppID: 1400175041,
			selType: webim.SESSION_TYPE.C2C,
			selToID: 1,
			selSess: null // 当前聊天会话
		})
		// 当前用户身份
		var loginInfo = {
			'sdkAppID': 1400175041, // 用户所属应用id,必填
			'appIDAt3rd': 1400175041, // 用户所属应用id，必填
			'accountType': 12345, // 用户所属应用帐号类型，必填
			'identifier': 2, // 当前用户ID,必须是否字符串类型，选填
			'identifierNick': '陈立', // 当前用户昵称，选填
			'userSig': '2', // 鉴权 Token
		}

		// 监听事件
		var listeners = {
			'onConnNotify': onConnNotify, // 选填
			'onMsgNotify': onMsgNotify, // 监听新消息(私聊(包括普通消息和全员推送消息)，普通群(非直播聊天室)消息)事件，必填
		}

		// 其他对象，选填
		var options = {
			'isAccessFormalEnv': true, // 是否访问正式环境，默认访问正式，选填
			'isLogOn': false // 是否开启控制台打印日志,默认开启，选填
		}

		// sdk登录
		sdkLogin(loginInfo, listeners, options)
	}
	onLoad() {
		this.initIM()
	}

	methods = {
		toMessage() {
			wepy.navigateTo({url: 'agent_message'})
		},
		toHome() {
			wepy.navigateTo({url: 'agent_home'})
		},
		quit () {
			wepy.navigateTo({url: 'login_wx'})
		}
	}
}
</script>
