<style lang="less">
@import '../styles/base.less';
.container {
	.cells {
		margin:20rpx 0 50rpx 0;
		width:100%;
		.cell {
			.flex;
			justify-content: space-between;
			width: 100%;
			height: 160rpx;
			padding:30rpx;
			box-sizing: border-box;
			background: #fff;
			color: #101d37;
			margin-top:2rpx;
			&-left {
				.flex;
				.main {
					margin-left:30rpx;
					.name {font-size: 32rpx;}
					.content {
						color:#b7b9bb;
						margin-top:10rpx;
						width: 430rpx;
						.ellipsis
					}
				}
			}
			image {
				width: 100rpx;
				height: 100rpx;
				border-radius: 100rpx;
			}
			&-right {
				.flex;
				flex-direction: column;
				width: 110rpx;
				.time {color:#b7b9bb}
				.unread-wrap {
					width: 35rpx;
					height: 35rpx;
					.unread {
						width: 35rpx;
						height: 35rpx;
						line-height: 35rpx;
						border-radius: 35rpx;
						background: red;
						color:#fff;
						text-align: center;
						margin-top:10rpx;
						font-size: 25rpx;
					}
				}
			}
		}
	}
}
.nochat {
	.flex;
	flex-direction: column;
	background: #fff;
	width: 100%;
	height: 100%;
	image {
		width: 260rpx;
		height: 200rpx;
		padding-top:85rpx;
	}
	.text {
		color:@gray;
		padding-top:30rpx;
	}
	.button {
		margin-top: 70rpx;
	}
}
</style>
<template>
	<view class="container" style="{{isNoData ? 'height:100%': ''}}">
		<view class="cells" wx:if="{{!isNoData}}">
			<view class="cell" 
				@tap="toChat" 
				wx:for="{{sessionList}}" wx:key="index" 
				data-id="{{item.id}}" data-avatar="{{item.avatar}}" data-name="{{item.name}}">
				<view class="cell-left">
					<image src="{{item.avatar}}"></image>
					<view class="main">
						<view class="name">{{item.name}}</view>
						<view class="content">{{item.content}}</view>
					</view>
				</view>
				<view class="cell-right">
					<view class="time">{{item.time}}</view>
					<view class="unread-wrap"><view class="unread" wx:if="{{item.unread}}">{{item.unread}}</view></view>
				</view>
			</view>
		</view>
		<view wx:else class="nochat">
			<image src="../images/no-chat.jpg"></image>
			<view class="text">暂无聊天记录，您可在线寻找心仪房源</view>
			<form bindsubmit="submit" report-submit="true" class="form">
				<button class="button" form-type="submit" @tap="toIndex">查找真房源</button>
			</form>
		</view>
	</view>
</template>

<script>
import wepy from 'wepy'
import api from '../utils/api'
import webim from '../utils/webim_wx'
import {getRecentContactList, getDateDiff, initIM, convertCustomMsgToHtml, setSessionUnread} from '../utils/util'
export default class Message extends wepy.page {
	config = {
		navigationBarTitleText: '我的消息',
		navigationBarBackgroundColor: '#f5f5f5'
	}
	components = {
	}

	data = {
		sessionList: [],
		isNoData: true,
		isAgent: false
	}

	computed = {
	}

	events = {
	}
	async onLoad() {
		if (wepy.$instance.globalData.myUserInfo.type == '2') this.isAgent = true
		this.$apply()
	}
	async onShow() {
		wx.hideTabBarRedDot({index: 1})
		this.sessionList = []
		wx.showLoading({title: '加载中'})
		// 没有登录当前页面的IM时进行
		const IMByMessPage = wx.getStorageSync('IMByMessPage')
		if (!webim.checkLogin() || !IMByMessPage) {
			await this.myInitIM()
			wx.setStorageSync('IMByMessPage', true)
		}
		// 首先判断有无会话列表
		const contactList = await getRecentContactList()
		if (contactList == undefined) {
			console.log('无聊天记录')
			this.isNoData = true
			this.$apply()
			wx.hideLoading()
			return
		} else {
			this.isNoData = false
		}
		// 有会话列表继续执行
		const sessionStorage = wx.getStorageSync('sessionStorage')
		console.log('sessionStorage', sessionStorage)
		console.log('contalist', contactList)
		const refreshContact = wx.getStorageSync('refreshContact')
		if (sessionStorage && !refreshContact) {
			// 有数据缓存非第一次进来，且会话列表长度与缓存一致，无需重复进行数据处理
			if (sessionStorage.length == contactList.length) {
				console.log('会话列表长度与缓存一致，更新时间即可')
				this.sessionList = sessionStorage
				this.sessionList.forEach(ele => {
					ele.time = getDateDiff(ele.timeStamp * 1000)
				})
				wx.hideLoading()
				this.$apply()
				return
			}
		}
		// 与后端服务器对比获取未读数
		const initSessionList = await setSessionUnread(contactList)
		console.log('初始会话列表数据', initSessionList)
		// 进一步数据处理（头像，文字，时间）
		await this.dataController(initSessionList)
		wx.setStorageSync('refreshContact', false)
		wx.hideLoading()
		this.$apply()
	}
	async myInitIM() {
		return new Promise(async resolve => {
			const onMsgNotify = (newMsgs) => {
				console.log('列表页新信息', newMsgs)
				wx.showTabBarRedDot({index: 1})
				// const sessMap = webim.MsgStore.sessMap()
				// console.log('sessMap', sessMap)
				this.sessionList.forEach(async (ele, index) => {
					if (newMsgs[0].fromAccount == ele.id) {
						ele.unread = ele.unread + 1
						ele.time = '刚刚'
						ele.timeStamp = ele.MsgTimeStamp
						ele.content = await convertCustomMsgToHtml(newMsgs[0])
						this.sessionList.splice(index, 1)
						this.sessionList.unshift(ele)
						wx.setStorageSync('sessionStorage', this.sessionList)
						this.$apply()
						return
					}
				})
			}
			await initIM(onMsgNotify)
			resolve()
		})
	}
	async dataController(data) {
		return new Promise(async resolve => {
			const mySessionList = []
			data.forEach(async (ele, index) => {
				const item = {}
				const {data: {userInfo}} = await wepy.request({
					url: api['userInfo'],
					data: {
						uid: ele.To_Account
					}
				})
				if (!userInfo) {
					// 修复对象为undefined
					resolve()
					return
				}
				if (this.isAgent) {
					// 自己为经纪人，则列表对象为用户
					item.avatar = userInfo.headimg
					item.name = userInfo.nickname
				} else {
					// 列表对象为经纪人
					item.avatar = userInfo.agentAvatar
					item.name = userInfo.agentName
				}
				item.id = ele.To_Account
				item.unread = ele.unread
				item.initIndex = index
				item.time = getDateDiff(ele.MsgTimeStamp * 1000)
				item.timeStamp = ele.MsgTimeStamp
				if (ele.MsgShow == '[其他]') {
					ele.MsgShow = '[房源信息]'
				} else if (ele.MsgShow.indexOf('qimg.fangzi.xiaoyu.com/img') != -1) {
					ele.MsgShow = '[图片信息]'
				} else if (ele.MsgShow.indexOf('qimg.fangzi.xiaoyu.com/audio') != -1) {
					ele.MsgShow = '[语音信息]'
				}
				item.content = ele.MsgShow
				mySessionList.push(item)
				if (data.length - 1 == index) {
					// 防止时间错乱
					mySessionList.sort((a, b) => {
						return a.initIndex - b.initIndex
					})
					this.sessionList = mySessionList
					console.log('sessionList', this.sessionList)
					wx.setStorageSync('sessionStorage', this.sessionList)
					resolve()
					this.$apply()
				}
			})
		})
	}
	methods = {
		toChat({currentTarget: {dataset}}) {
			console.log('dataset', dataset)
			// 头像路径过长，存入缓存带参
			wx.setStorageSync('fAvatar', dataset.avatar)
			wepy.navigateTo({url: `chat?fId=${dataset.id}&fName=${dataset.name}`})
		},
		async submit({detail}) {
			console.log('detail', detail)
			await wepy.request({
				url: api['saveFromId'],
				method: 'POST',
				data: {
					uid: wepy.$instance.globalData.myUserInfo.uid,
					form_id: detail.formId
				}
			})
		},
		toIndex() {
			wx.switchTab({url: 'index'})
		}
	}
}
</script>
