<style lang="less">
@import '../styles/base.less';
.container {
	.cells {
		margin:20rpx 0 50rpx 0;
		width:100%;
		.cell {
			.flex;
			justify-content: space-between;
			width: 100%;
			height: 160rpx;
			padding:30rpx;
			box-sizing: border-box;
			background: #fff;
			color: #101d37;
			margin-top:2rpx;
			&-left {
				.flex;
				.main {
					margin-left:30rpx;
					.name {font-size: 32rpx;}
					.content {
						color:#b7b9bb;
						margin-top:10rpx;
						width: 430rpx;
						.ellipsis
					}
				}
			}
			image {
				width: 100rpx;
				height: 100rpx;
				border-radius: 100rpx;
			}
			&-right {
				.flex;
				flex-direction: column;
				.time {color:#b7b9bb}
				.unread-wrap {
					width: 35rpx;
					height: 35rpx;
					.unread {
						width: 35rpx;
						height: 35rpx;
						border-radius: 35rpx;
						background: red;
						color:#fff;
						text-align: center;
						margin-top:10rpx;
					}
				}
			}
		}
	}
}
.nochat {
	.flex;
	flex-direction: column;
	background: #fff;
	width: 100%;
	height: 100%;
	image {
		width: 260rpx;
		height: 200rpx;
		padding-top:85rpx;
	}
	.text {
		color:@gray;
		padding-top:30rpx;
	}
	.button {
		margin-top: 70rpx;
	}
}
</style>
<template>
	<view class="container" style="{{isNoData ? 'height:100%': ''}}">
		<view class="cells" wx:if="{{!isNoData}}">
			<view class="cell" 
				@tap="toChat" 
				wx:for="{{sessionList}}" wx:key="index" 
				data-id="{{item.id}}" data-avatar="{{item.avatar}}" data-name="{{item.name}}">
				<view class="cell-left">
					<image src="{{item.avatar}}"></image>
					<view class="main">
						<view class="name">{{item.name}}</view>
						<view class="content">{{item.content}}</view>
					</view>
				</view>
				<view class="cell-right">
					<view class="time">{{item.time}}</view>
					<view class="unread-wrap"><view class="unread" wx:if="{{item.unread}}">{{item.unread}}</view></view>
				</view>
			</view>
		</view>
		<view wx:else class="nochat">
			<image src="../images/no-chat.jpg"></image>
			<view class="text">暂无聊天记录，您可在线寻找心仪房源</view>
			<form bindsubmit="submit" report-submit="true" class="form">
				<button class="button" form-type="submit" @tap="toIndex">查找真房源</button>
			</form>
		</view>
	</view>
</template>

<script>
import wepy from 'wepy'
import api from '../utils/api'
import webim from '../utils/webim_wx'
import {getRecentContactList, getDateDiff, initIM, convertCustomMsgToHtml, getUnread, getAllUnread} from '../utils/util'
export default class Message extends wepy.page {
	config = {
		navigationBarTitleText: '我的消息',
		navigationBarBackgroundColor: '#f5f5f5'
	}
	components = {
	}

	data = {
		sessionList: [],
		sessionStorage: [],
		unreadList: [],
		isNoData: true,
	}

	computed = {
	}

	events = {
	}
	async onLoad() {
	}
	async onShow() {
		this.sessionList = []
		this.unreadList = wx.getStorageSync('unread')
		if (!this.unreadList) {
			// 首页还未加载完
			this.isNoData = true
			return
		}
		wx.showLoading({title: '加载中'})
		const onMsgNotify = (newMsgs) => {
			console.log('列表页新信息', newMsgs)
			wx.showTabBarRedDot({index: 1})
			this.onGetUnread(newMsgs)
		}
		await initIM(onMsgNotify)
		const sessionArry = await getRecentContactList()
		if (sessionArry == undefined) {
			this.isNoData = true
			this.$apply()
			wx.hideLoading()
			return
		} else {
			this.isNoData = false
		}
		await this.dataController(sessionArry)
		this.sessionStorage = wx.getStorageSync('sessionStorage')
		if (!this.sessionStorage) getAllUnread(await getUnread(sessionArry))
		wx.hideLoading()
		this.$apply()
	}
	onGetUnread(newMsgs) {
		const sessMap = webim.MsgStore.sessMap()
		console.log('sessMap', sessMap)
		this.sessionList.forEach(async ele => {
			ele.unread = sessMap[`C2C${ele.id}`].unread()
			ele.time = '刚刚'
			newMsgs.forEach(async msg => {
				if (msg.fromAccount == ele.id) {
					ele.content = await convertCustomMsgToHtml(msg)
				}
				this.$apply()
			})
		})
	}
	async dataController(data) {
		return new Promise(resolve => {
			this.sessionList = []
			let sameToStroage
			if (data.length == this.sessionStorage.length) sameToStroage = true
			data.forEach(async ele => {
				const item = {}
				if (!sameToStroage) {
					const {data: {userInfo}} = await wepy.request({
						url: api['userInfo'],
						data: {
							uid: ele.To_Account
						}
					})
					item.avatar = userInfo.headimg
					item.name = userInfo.nickname
				} else {
					console.log('无需重新获取头像，缓存中取')
					this.sessionStorage.forEach(ses => {
						if (ele.To_Account == ses.id) {
							item.avatar = ses.avatar
							item.name = ses.name
						}
					})
				}
				item.id = ele.To_Account
				item.time = getDateDiff(ele.MsgTimeStamp * 1000)
				if (ele.MsgShow == '[其他]') {
					ele.MsgShow = '[房源信息]'
				} else if (ele.MsgShow.indexOf('qimg.fangzi.xiaoyu.com/img') != -1) {
					ele.MsgShow = '[图片信息]'
				} else if (ele.MsgShow.indexOf('qimg.fangzi.xiaoyu.com/audio') != -1) {
					ele.MsgShow = '[语音信息]'
				}
				item.content = ele.MsgShow
				// 注入初始未读计数
				this.unreadList.forEach(ele2 => {
					if (ele2.fid == item.id) item.unread = ele2.number
				})
				this.sessionList.push(item)
				this.$apply()
			})
			console.log('sessionList', this.sessionList)
			setTimeout(() => {
				// 将sessionList写入缓存
				wx.setStorageSync('sessionStorage', this.sessionList)
			}, 500)
			resolve()
		})
	}
	methods = {
		toChat({currentTarget: {dataset}}) {
			console.log('e', dataset)
			wepy.navigateTo({url: `chat?friendId=${dataset.id}&friendAvatar=${dataset.avatar}&friendName=${dataset.name}`})
		},
		async submit({detail}) {
			console.log('detail', detail)
			await wepy.request({
				url: api['saveFromId'],
				method: 'POST',
				data: {
					uid: wepy.$instance.globalData.myUserInfo.uid,
					form_id: detail.formId
				}
			})
		},
		toIndex() {
			wx.switchTab({url: 'index'})
		}
	}
}
</script>
