<style lang="less" scoped>
.container {
	width: 100%;
	height: 100%;
	background: #fff;
  	box-sizing: border-box;
	align-items: center;
	padding-top:20rpx;
	padding-bottom: 80rpx;
	.item {
		margin-bottom: 30rpx;
		&-head {
			display: flex;
			align-items: center;
			margin-bottom: 25rpx;
			font-size: 16px;
			.title {
				font-size: 13px;
				color:#888888;
				width: 100%;
				padding-left: 40rpx;
			}
			.address {
				width: 30rpx;
				height: 30rpx;
				margin:0 10rpx;
			}
		}
		&-content {
			display: flex;
			flex-wrap:wrap;
			margin: 0 auto;
			background: #f5f5f5;
			input {
				width: 570rpx;
				height: 70rpx;
				padding: 0 20rpx;
				box-sizing: border-box;
				line-height: 70rpx;
				border-radius: 5rpx;
			}
			.icon {
				width: 60rpx;
				height: 70rpx;
				text-align: center;
				line-height: 70rpx;
				box-sizing: border-box;
				image {
					width: 35rpx;
					height: 35rpx;
					padding:15rpx;
				}
			}
			.icon1 {
				.icon;
				border-top-left-radius: 60rpx;
				border-bottom-left-radius: 60rpx;
			}
			.icon2 {
				.icon;
				border-top-right-radius: 60rpx;
				border-bottom-right-radius: 60rpx;
			}
			.box {
				width: 750rpx;
				height: 80rpx;
				background: #fff;
				line-height: 80rpx;
				padding-left:40rpx;
				text-align: left;
				border-bottom:1px solid #e5e5e5;
				box-sizing: border-box;
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
				font-size: 16px;
			}
			.box:last-child {
				border:none;
			}
			.letter {
				width: 100%;
				font-size: 13px;
				color:#888888;
				margin-bottom: 25rpx;
				padding-left: 10rpx;
			}
		}
	}
}
</style>
<template>
<view class="container">
	<view class="item">
		<view class="item-content">
			<view class="icon1">
				<image src="../images/search.png"></image>
			</view>
			<input placeholder="输入小区名称搜索" bindinput="onInputChange" value="{{searchText}}"/>
			<view class="icon2">
				<image wx:if="{{isSearched}}" src="../images/clear.png" @tap="clearSearch"></image>
			</view>
		</view>
	</view>
	<view class="item" wx:if="{{estateList.length != 0 && !isChoosed}}">
		<view class="item-content">
			<view class="box" wx:for="{{estateList}}" wx:key="index" @tap="setEstateName({{item}})">{{item.estateName}}</view>
		</view>
	</view>
	<block wx:if="{{isChoosed}}">
		<sortBar :scrollTop.sync="scrollTop"></sortBar>
		<houseList :dataList.sync="dataList"></houseList>
	</block>
</view>
</template>

<script>
import wepy from 'wepy'
import houseList from '../components/list_house'
import sortBar from '../components/bar_sort'
import api from '../utils/api'
export default class IndexSearch extends wepy.page {
	config = {
		navigationBarTitleText: '小区名称',
		navigationBarBackgroundColor: '#f5f5f5',
		enablePullDownRefresh: false
	}
	components = {
		houseList,
		sortBar
	}
    data = {
		searchText: '',
		scrollTop: 0,
		isSearched: false,
		isChoosed: false,
		page: 1,
		dataList: [],
		estateList: [],
		sortObj: {}
	}
	// 监听页面滚动
	onPageScroll (e) {
		this.scrollTop = e.scrollTop
		this.$apply()
	}
	// 上拉触底事件
	async onReachBottom() {
		await this.getHouseList(++this.page)
	}
	events = {
		sortHouses (sortObj) {
			this.page = 1
			this.dataList = []
			// 将除了小区的元素，其他置空
			if (this.sortObj.estateName) {
				var estateName = this.sortObj.estateName
			}
			this.sortObj = []
			this.sortObj.estateName = estateName
			Object.assign(this.sortObj, sortObj)
			this.getHouseList(this.page)
		}
	}
	async onLoad() {
	}
	getHouseList(page) {
		return new Promise(async resolve => {
			if (page != 1) {
				wx.showLoading({
					title: '玩命加载中',
				})
			}
			const form = {
				page: page,
				pagesize: 8
			}
			Object.assign(form, this.sortObj)
			const {data: {list}} = await wepy.request({
				url: api['houseList'],
				data: form
			})
			if (list) {
				list.forEach(ele => {
					ele.unitPrice = (ele.sellPrice / ele.square).toFixed(2)
					this.dataList.push(ele)
				})
			}
			wx.hideLoading()
			this.$apply()
			resolve()
		})
	}
	methods = {
		onInputChange: ({detail: {value}}) => {
			this.isChoosed = false
			this.dataList = []
			if (!value) {
				this.isSearched = false
				this.estateList = []
				return
			}
			this.searchText = value
			this.isSearched = true
			wx.showLoading({
				title: '搜索中',
			})
			wepy.request({
				url: api['estateList'],
				data: {
					estateName: value,
				}
			}).then(({data}) => {
				console.log(data)
				this.estateList = data
				wx.hideLoading()
				this.$apply()
			})
		},
		clearSearch() {
			this.isSearched = false
			this.searchText = ''
			this.estateList = []
			this.$invoke('sortBar', 'clearResult')
		},
		async setEstateName(item) {
			console.log(item)
			this.isChoosed = true
			this.searchText = item.estateName
			this.sortObj = {}
			this.sortObj.estateName = item.estateName
			this.$invoke('sortBar', 'clearResult')
			await this.getHouseList(1)
			this.$apply()
		}
	}
}
</script>
