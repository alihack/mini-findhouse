<style lang="less">
@import '../styles/base.less';
.container {
	.quit {
		.label-auto(124rpx, 50rpx);
		position: absolute;
		top: 40rpx;
		right:40rpx;
		background: #f5f5f5;
		color:@gray;
		font-size: 30rpx;
		border-radius: 50rpx;
	}
	.header {
		.flex;
		width: 100%;
		height: 240rpx;
		padding: 0 40rpx;
		box-sizing: border-box;
		background: #fff;
		font-size: 32rpx;
		.avatar {
			.avatar-auto(100rpx);
			background: green;
			margin-right: 25rpx;
		}
	}
	.row-wrap{
		padding: 0 30rpx;
		width: 100%;
		box-sizing: border-box;
		background: #fff;
		color:@blue;
		font-size: 32rpx;
		.row {
			.flex;
			width: 100%;
			border-top:2rpx solid #f5f5f5;
			&-side {
				width: 344rpx;
				height: 114rpx;
				padding: 35rpx;
				box-sizing: border-box;
				text-align: center;
			}
			&-center {
				width: 2rpx;
				background: #f5f5f5;
				height: 60rpx;
			}
		}
	}
	.cells {
		margin:20rpx 0 50rpx 0;
		width:100%;
		.tips {
			width: 100%;
			height: 50rpx;
			background: #fff;
			line-height: 50rpx;
			padding-right: 20rpx;
			color:@gray;
			text-align: right;
			box-sizing: border-box;
		}
		.cell {
			.flex;
			justify-content: space-between;
			width: 100%;
			height: 190rpx;
			background: #fff;
			border-top:2rpx solid #f5f5f5;
			color:@gray;
			overflow:hidden;
			.content {
				width: 100%;
				height: 190rpx;
				padding:30rpx;
				box-sizing: border-box;
				transition: all 0.4s;
				transform: translateX(90px);
				margin-left: -90px;
				.title {
					.label {
						.label-auto(80rpx, 35rpx);
						background: #5dacff;
						color:#fff;
						margin-right: 15rpx;
						font-size: 24rpx;
					}
					.name {
						font-size: 32rpx;
						color:black;
					}
				}
				.code {margin: 10rpx 0}
			}
			.del {
				.flex;
				flex-direction: column;
				justify-content: center;
				width: 170rpx;
				height: 190rpx;
				text-align: center;
				color: #fff;
				background: red;
				transform: translateX(170px);
				transition: all 0.4s;
				image {
					width: 60rpx;
					height: 65rpx;
				}
			}
		}
		.touch-move-active .content,.touch-move-active .del {
			transform: translateX(0);
		}
		.cell:first-child {border:none}
		.movabled {
			z-index: 999;
		}
	}
}
</style>
<template>
	<view class="container">
		<view class="header">
			<image src="{{userInfo.agentAvatar}}" class="avatar"></image>
			<view class="detail">
				<view class="name">{{userInfo.agentName}}</view>
				<view class="phone">{{userInfo.mobile}}</view>
			</view>
		</view>
		<view class="row-wrap">
			<view class="row">
				<view class="row-side" @tap="indexVIP">专属主页</view>
				<view class="row-center"></view>
				<view class="row-side" @tap="addSource">添加房源</view>
			</view>
		</view>
		<movable-area class="cells" style="height:{{movableHeight}}" wx:if="{{agentHouses.length != 0}}">
			<view class="tips">可拖拽排序</view>
			<movable-view 
				direction="vertical" 
				class="cell {{item.isTouchMove ? 'touch-move-active' : ''}} {{item.movabled ? 'movabled': ''}}" 
				wx:for="{{agentHouses}}" wx:key="index"
				y="{{index * 95 + 25}}"
				>
				<view class="content" @touchstart="touchS" @touchmove="touchM" @touchend="touchE" data-index="{{index}}">
					<view class="title">
						<text class="label">{{item.info[0].deptName1}}</text>
						<text class="name">{{item.info[0].employeeName1}}</text>
					</view>
					<view class="code">编号： {{item.info[0].propertyNo}}</view>
					<view class="detail">{{item.info[0].estateName}}/{{item.info[0].countF}}室{{item.info[0].countT}}厅</view>
				</view>
				<view class="del" bindtap= "delItem({{index}})">
					<image src="../images/del.png"></image>
					<text>删除</text>
				</view>
			</movable-view>
		</movable-area>
	</view>
</template>

<script>
import wepy from 'wepy'
import api from '../utils/api'
export default class AgentHome extends wepy.page {
	config = {
		navigationBarTitleText: '经纪人中心',
		navigationBarBackgroundColor: '#f5f5f5'
	}
	components = {
	}

	data = {
		delBtnWidth: 170,
		movableHeight: '',
		startX: 0,
		startY: 0,
		agentHouses: [],
		preAgentHouse: [],
		userInfo: {},
		currentIndex: ''
	}

	computed = {
	}

	events = {
	}

	getAgentHouses() {
		return new Promise(async resolve => {
			const {data: {list}} = await wepy.request({
				url: api['agentHouses'],
				data: {
					agentId: wepy.$instance.globalData.myUserInfo.uid,
				}
			})
			if (list) {
				this.agentHouses = list
				this.movableHeight = list.length * 250 + 'rpx'
				this.agentHouses.forEach(ele => {
					ele.movabled = false
				})
				resolve()
				this.$apply()
			}
		})
	}
	sortHouses(oldIndex, newIndex) {
		return new Promise(async resolve => {
			await wepy.request({
				url: api['sortHouses'],
				method: 'POST',
				data: {
					uid: this.userInfo.uid,
					old_sort: oldIndex,
					new_sort: newIndex
				}
			})
			resolve()
		})
	}
	async refresh() {
		await this.getAgentHouses()
	}
	async onShow () {
		this.userInfo = wepy.$instance.globalData.myUserInfo
		this.refresh()
	}

	methods = {
		async delItem (index) {
			// 移除房源
			await wepy.request({
				url: api['deleteHouses'],
				method: 'POST',
				data: {
					uid: wepy.$instance.globalData.myUserInfo.uid,
					propertyUuid: this.agentHouses[index].property_uuid
				}
			})
			this.agentHouses.splice(index, 1)
			this.$apply()
		},
		touchS (e) {
			// 重置所有删除
			this.currentIndex = e.currentTarget.dataset.index
			this.preAgentHouse = []
			this.agentHouses.forEach(ele => {
				ele.isTouchMove = false
				ele.movable = false
				this.preAgentHouse.push(ele)
			})
			if (e.touches.length == 1) {
				this.startX = e.touches[0].clientX
				this.startY = e.touches[0].clientY
			}
			this.agentHouses[this.currentIndex].movabled = true
			this.$apply()
		},
		touchM (e) {
			const touchMoveX = e.changedTouches[0].clientX
			const touchMoveY = e.changedTouches[0].clientY
			const diffIndex = parseInt((touchMoveY - this.startY) / 95)
			if (diffIndex != 0) {
				console.log('拖拽事件')
				this.$apply()
				return
			}
			// 获取滑动角度
			const X = touchMoveX - this.startX
			const Y = touchMoveY - this.startY
			const angle = 360 * Math.atan(Y / X) / (2 * Math.PI)
			this.agentHouses.forEach((ele, i) => {
				if (Math.abs(angle) > 30) return
				if (i == this.currentIndex) {
					if (touchMoveX < this.startX - 20) {
						// 左滑
						ele.isTouchMove = true
					} else {
						// 右滑
						ele.isTouchMove = false
					}
				}
			})
			this.$apply()
		},
		async touchE(e) {
			const currentIndex = this.currentIndex
			const currentItem = this.agentHouses[currentIndex]
			if (currentItem.isTouchMove) {
				console.log('左滑事件')
				return
			}
			this.agentHouses[currentIndex].movabled = false
			const touchEndY = e.changedTouches[0].clientY
			const diffIndex = parseInt((touchEndY - this.startY) / 95)
			const endIndex = currentIndex + diffIndex
			console.log('endindex', endIndex)
			if (diffIndex == 0) {
				console.log('Y轴无移动')
				this.agentHouses = this.preAgentHouse
				this.$apply()
				return
			}
			this.agentHouses.splice(currentIndex, 1)
			this.agentHouses.splice(endIndex, 0, currentItem)
			await this.sortHouses(currentIndex, endIndex)
			this.$apply()
		},
		addSource() {
			wepy.navigateTo({url: 'agent_addSource'})
		},
		indexVIP() {
			if (this.agentHouses.length == 0) {
				wx.showToast({
					title: '请添加房源',
					icon: 'none'
				})
				return
			}
			// 路径后不能带参数
			wx.setStorageSync('agentId', wepy.$instance.globalData.myUserInfo.uid)
			wepy.switchTab({url: 'index'})
		}
	}
}
</script>
