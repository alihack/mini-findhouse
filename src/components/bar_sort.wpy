<style lang="less">
@import '../styles/base.less';
// 排序工具栏
.sort-bar {
	width: 100%;
	background: #fff;
	min-height: 90rpx;
	.wrap {
		width: 100%;
		background: #fff;
		z-index: 200;
	}
	&-drop {
		height: 90rpx;
		display: flex;
		align-items: center;
		justify-content: space-around;
		.item {
			width: 90rpx;
			height: 40rpx;
			display: flex;
			align-items: center;
			justify-content: space-between;
			font-size: 28rpx;
			margin-right: 5rpx;
			text {
				width: 80rpx;
				.ellipsis
			}
			image {
				width: 20rpx;
				height: 20rpx;
				display: inline-block;
				margin-left:10rpx;
			}
		}
	}
	&-kinds {
		padding:0 30rpx;
		box-sizing: border-box;
		.box-wrap {
			.flex;
			flex-wrap: wrap;
			width: 720rpx;
			margin-top: 10rpx;
			.box {
				.label-auto(156rpx, 70rpx);
				background: #f8f8f9;
				margin-right: 23rpx;
				margin-top:25rpx;
			}
			.box:active,.box:hover {
				border: 2rpx solid @blue;
				background: #fff;
				box-sizing: border-box;
				line-height: 66rpx;
			}
			.kindSelected {
				.label-auto(156rpx, 70rpx);
				background: #f8f8f9;
				margin-right: 23rpx;
				margin-top:25rpx;
				border: 2rpx solid @blue;
				background: #fff;
				box-sizing: border-box;
				line-height: 66rpx;
			}
		}
		.button {
			margin: 45rpx 0;
		}
		.title {
			font-size: 36rpx;
			font-weight: bold;
			margin-top:40rpx;
		}
		.input {
			.flex;
			justify-content: space-between;
			width: 690rpx;
			margin-top:30rpx;
				input {
					width: 320rpx;
					height: 70rpx;
					border: 2rpx solid #f5f5f5;
					display: inline-block;
					text-align: center;
			}
		}
	}
}
.shade {
	width: 100%;
	height: 100%;
	position: fixed;
	top: 0;
	left: 0;
	background: #000;
	opacity: 0.2;
	overflow: hidden;
	z-index: 100;
	color: #fff;
}
.bar-fixed {
	position: fixed;
	left:0;
	top:0;
	box-shadow: 0 0 15rpx #999;
}
</style>
<template>
<view class="sort-bar">
	<view class="wrap {{isTabFixed? 'bar-fixed': ''}}">
		<view class="sort-bar-drop">
			<view class="item" wx:for="{{sortData}}" wx:key="index" @tap="sortBy({{index}})">
				<text style="color:{{item.isConfirmed? '#2d8cf0': ''}}">{{item.title}}</text>
				<image src="{{item.isConfirmed?'../images/blue-triangle.png':'../images/gray-triangle.png'}}"></image>
			</view>
		</view>
		<view class="sort-bar-kinds" wx:if="{{showSortBarPanel}}">
			<!-- 区域下拉 -->
			<block wx:if="{{sortData[0].isSelected}}">
				<view class="box-wrap">
					<view class="box" wx:for="{{sortData[0].kinds}}" wx:key="index"  @tap="selectRegion({{item}})">{{item}}</view>
				</view>
				<view class="button"  @tap="confirm({{0}})">确认</view>
			</block>
			<!-- 总价下拉 -->
			<block wx:if="{{sortData[1].isSelected}}">
				<view class="title">价格区间（万）</view>
				<view class="input">
					<input placeholder="最低价格" type="number" @input="onInputMin"/><input placeholder="最高价格" type="number" @input="onInputMax"/>
				</view>
				<view class="box-wrap">
					<view class="box" wx:for="{{sortData[1].kinds}}" wx:key="index"  @tap="selectPrice({{item}})">{{item}}</view>
				</view>
				<view class="button" @tap="confirm({{1}})">确认</view>
			</block>
			<!-- 户型下拉 -->
			<block wx:if="{{sortData[2].isSelected}}">
				<view class="box-wrap">
					<view class="box" wx:for="{{sortData[2].kinds}}" wx:key="index"  @tap="selectHouseType({{item}})">{{item}}</view>
				</view>
				<view class="button"  @tap="confirm({{2}})">确认</view>
			</block>
			<!-- 更多下拉 -->
			<block wx:if="{{sortData[3].isSelected}}">
				<view class="type" wx:for="{{sortData[3].type}}" wx:for-index="typeIndex" wx:for-item="type" wx:key="typeIndex">
					<view class="title">{{type.title}}</view>
					<view class="box-wrap">
						<view
							wx:for="{{sortData[3].type[typeIndex].kinds}}" 
							wx:for-item="kind" 
							wx:for-index="kindIndex" 
							wx:key="kindIndex"
							class="{{kind.isKindSelected? 'kindSelected':'box'}}"
							data-kindindex="{{kindIndex}}" data-typeindex="{{typeIndex}}"
							@tap="selectMore"
							>
							{{kind.value}}
						</view>
					</view>
				</view>
				<view class="button"  @tap="confirm({{3}})">确认</view>
			</block>
		</view>
	</view>
	<view class="shade" wx:if="{{showSortBarPanel}}" @tap="hideSortBarPanel"></view>
</view>
</template>
<script>
import wepy from 'wepy'
import {sortData} from '../utils/config'
export default class barSort extends wepy.component {
	props = {
		scrollTop: Number
	}

	data = {
		sortData,
		preSortData: sortData,
		sortBarTop: 0,
		showSortBarPanel: false,
		isTabFixed: false,
		minPrice: '',
		maxPrice: '',
		resultObj: {
			districtName: '',
			sellPrice: '',
			countF: '',
			square: '',
			direction: ''
		}
	}

	watch = {
		scrollTop () {
			if (this.scrollTop > this.sortBarTop) {
				this.isTabFixed = true
			} else {
				if (!this.showSortBarPanel) this.isTabFixed = false
			}
			this.$apply()
		}
	}
	onLoad() {
		this.getTop()
	}
	clearResult () {
		this.resultObj = {}
		// 重置数据，深拷贝
		this.sortData = []
		const preSortData = this.preSortData
		this.sortData = JSON.parse(JSON.stringify(preSortData))
		this.$apply()
	}
	getTop () {
		return new Promise(resolve => {
			// 获取排序栏高度
			const query = wx.createSelectorQuery()
			query.select('.sort-bar').boundingClientRect()
			query.selectViewport().scrollOffset()
			query.exec(res => {
				if (res[0]) {
					this.sortBarTop = res[0].top
				}
				resolve()
				this.$apply()
			})
		})
	}
	methods = {
		async sortBy (index) {
			this.sortData.forEach(ele => {
				ele.isSelected = false
			})
			this.sortData[index].isSelected = true
			this.showSortBarPanel = true
			if (this.sortBarTop == 0) {
				await this.getTop()
			}
			if (!this.isTabFixed) {
				wepy.pageScrollTo({
					scrollTop: this.sortBarTop,
					duration: 300
				})
			}
			this.isTabFixed = true
			this.$apply()
		},
		hideSortBarPanel() {
			this.showSortBarPanel = false
			this.isTabFixed = false
			this.$apply()
		},
		selectRegion(item) {
			this.resultObj.districtName = item
			if (item == '不限') this.sortData[0].isConfirmed = false
		},
		selectPrice(item) {
			this.resultObj.sellPrice = item
			if (item == '不限') this.sortData[1].isConfirmed = false
		},
		selectHouseType(item) {
			this.resultObj.countF = item
			if (item == '不限') this.sortData[2].isConfirmed = false
		},
		selectMore({currentTarget: {dataset}}) {
			const kindIndex = dataset.kindindex
			const typeIndex = dataset.typeindex
			const value = this.sortData[3].type[typeIndex].kinds[kindIndex].value
			if (value == '不限') this.sortData[3].isConfirmed = false
			if (typeIndex == 0) {
				this.resultObj.square = value
				this.sortData[3].type[0].kinds.forEach(kind => {
					kind.isKindSelected = false
				})
			} else {
				this.resultObj.direction = value
				this.sortData[3].type[1].kinds.forEach(kind => {
					kind.isKindSelected = false
				})
			}
			this.sortData[3].type[typeIndex].kinds[kindIndex].isKindSelected = true
			this.$apply()
		},
		onInputMin({detail: {value}}) {
			console.log('min', value)
			this.minPrice = value
			this.$apply()
		},
		onInputMax({detail: {value}}) {
			this.maxPrice = value
			this.$apply()
		},
		confirm (index) {
			if (this.minPrice && this.maxPrice) {
				if (Number(this.minPrice) > Number(this.maxPrice)) {
					wx.showToast({title: '最低价不高于最高价!', icon: 'none'})
					return
				} else {
					this.resultObj.sellPrice = this.minPrice + '-' + this.maxPrice
					this.sortData[index].title = this.resultObj.sellPrice
				}
			}
			switch (index) {
				case 0:
					if (this.resultObj.districtName) {
						this.resultObj.districtName = this.resultObj.districtName.slice(0, 2) // 将区字去掉
						// 设置title
						if (this.resultObj.districtName == '不限') {
							this.sortData[index].title = '区域'
						} else {
							this.sortData[index].title = this.resultObj.districtName
							this.sortData[index].isConfirmed = true
						}
					}
					break
				case 1:
					if (this.minPrice && this.maxPrice) break
					if (this.resultObj.sellPrice) {
						const sellPrice = this.resultObj.sellPrice
						// 设置title
						if (sellPrice == '不限') {
							this.sortData[index].title = '总价'
						} else {
							this.sortData[index].title = this.resultObj.sellPrice
							this.sortData[index].isConfirmed = true
						}
						// 设置内容
						if (sellPrice == '100万以下') {
							this.resultObj.sellPrice = '0 - 100'
						} else if (sellPrice == '800万以上') {
							this.resultObj.sellPrice = '900'
						} else {
							if (sellPrice != '不限') this.resultObj.sellPrice = sellPrice.slice(0, sellPrice.length - 1)
						}
					}
					break
				case 2:
					if (this.resultObj.countF) {
						const countF = this.resultObj.countF
						// 设置title
						if (countF == '不限') {
							this.sortData[index].title = '户型'
						} else {
							this.sortData[index].title = countF
							this.sortData[index].isConfirmed = true
						}
						switch (countF) {
							case '一室':
							this.resultObj.countF = 1
							break
							case '二室':
							this.resultObj.countF = 2
							break
							case '三室':
							this.resultObj.countF = 3
							break
							case '四室':
							this.resultObj.countF = 4
							break
							case '五室':
							this.resultObj.countF = 5
							break
							case '五室以上':
							this.resultObj.countF = 6
							break
							default:
							this.resultObj.countF = ''
							break
						}
					}
					break
				default:
					// 更多
					if (this.resultObj.square) {
						const square = this.resultObj.square
						if (square == '50平以下') {
							this.resultObj.square = '0 - 50'
						} else if (square == '200平以上') {
							this.resultObj.square = '300'
						} else {
							if (square != '不限') {
								this.resultObj.square = square.slice(0, square.length - 1)
								this.sortData[index].isConfirmed = true
							}
						}
					}
					if (this.resultObj.direction) {
						if (this.resultObj.direction != '不限') {
							this.sortData[index].isConfirmed = true
							this.resultObj.direction = this.resultObj.direction.slice(1)
						}
					}
					break
			}
			this.showSortBarPanel = false
			this.isTabFixed = false
			for (let i in this.resultObj) {
				if (this.resultObj[i] == '' || this.resultObj[i] == '不限') {
					delete this.resultObj[i]
				}
			}
			this.$emit('sortHouses', this.resultObj)
			setTimeout(() => {
				wx.pageScrollTo({
					scrollTop: this.sortBarTop,
					duration: 300
				})
			}, 500)
			this.$apply()
		}
	}
}
</script>
