<style lang="less">
@import '../styles/base.less';
.login-sms {
	.flex;
	flex-direction: column;
	height: 100%;
	background: #fff;
	.panel {
		padding: 0rpx 30rpx;
		box-sizing: border-box;
		display: flex;
		flex-direction: column;
		align-items: center;
		.close {
			margin-top:30rpx;
			width: 100%;
			image {
				width: 40rpx;
				height: 40rpx;
				padding: 10rpx;
			}
		}
		.title {
			font-size: 21px;
			padding-bottom: 70rpx;
		}
		.button {
			margin-top:50rpx;
		}
		.item {
			display: flex;
			justify-content: space-between;
			width: 100%;
			height: 110rpx;
			padding: 35rpx 0 0 10rpx;
			font-size: 16px;
			box-sizing: border-box;
			border-bottom: 1px solid #e5e5e5;
			input {
				width: 450rpx;
			}
			.remain {
				color:#cccccc;
				font-size: 14px;
				padding-top:8rpx;
			}
			.btn-code {
				width:175rpx;
				height: 50rpx;
				line-height: 50rpx;
				font-size: 14px;
				border-radius: 50rpx;
				background: #5dacff;
				color:#fff;
				text-align: center;
			}
			.btn-code:active {
				background: #2d8cf0;
			}
		}
	}
	.modal {
		position: absolute;
		.flex;
		flex-direction: column;
		justify-content: space-around;
		width: 622rpx;
		height: 250rpx;
		top: 340rpx;
		left: 64rpx;
		z-index: 2000;
		background: #FFFFFF;
		border-radius: 20rpx;
		padding: 20rpx 30rpx;
		box-sizing: border-box;
		.txt {
				width: 512rpx;
				font-size: 32rpx
			}
		.button {
			.label-auto(310rpx, 84rpx);
			background: #5dacff;
			color:#fff;
		}
	}
	.screen {
		width: 100%;
		height: 100%;
		position: fixed;
		top: 0;
		left: 0;
		background: #000;
		opacity: 0.5;
		overflow: hidden;
		z-index: 1000;
		color: #fff;
	}
}
</style>
<template>
<view class="login-sms">
	<view class="panel">
		<view class="close" @tap="close"><image src="../images/close.png"></image></view>
		<view class="title">{{title}}</view>
		<view class="item">
			<input type="number" placeholder="请输入手机号" bindinput="onPhoneChange"></input>
			<view class="btn-code" wx:if="{{!isGetingCode}}" @tap="getCode">获取验证码</view>
			<view class="remain" wx:else>重新获取（{{remainTime}}s）</view>
		</view>
		<view class="item">
			<input type="number" placeholder="请输入验证码" bindinput="onCodeChange" value="{{codeNum}}"></input>
		</view>
		<view class="code"></view>
		<view class="button" @tap="login">登录</view>
	</view>
	<view class="modal animation-1s" wx:if="{{showModal}}">
		<view class="txt">很抱歉，该手机号不是经纪人手机号</view>
		<view class="button" @tap="closeModal">知道了</view>
	</view>
	<view class="screen" wx:if="{{showModal}}"></view>
</view>	
</template>
<script>
import wepy from 'wepy'
import api from '../utils/api'
import {getUserInfo} from '../utils/util'
export default class MyLoginSMS extends wepy.component {
	props = {
		isSMSByAgent: Boolean
	}

	data = {
		phoneNum: '',
		codeNum: '',
		isGetingCode: false,
		remainTime: 60,
		showModal: false,
		title: '手机号快捷登录'
	}

	watch = {
		isSMSByAgent() {
			if (this.isSMSByAgent) this.title = '经纪人登录'
			this.$apply()
		}
	}

	onLoad() {
	}
	async userLogin () {
		return new Promise(async resolve => {
			const res = await wepy.request({
				url: api['mobileLogin'],
				method: 'POST',
				data: {
					uid: wepy.$instance.globalData.myUserInfo.uid,
					mobile: this.phoneNum,
					code: this.codeNum
				}
			})
			if (res.code == 400) {
				this.codeNum = ''
				wx.showToast({
					title: '验证码错误',
					icon: 'none'
				})
				this.$apply()
			} else {
				wx.showToast({title: '登录成功'})
			}
			resolve()
		})
	}
	async agentLogin () {
		return new Promise(async resolve => {
			const res = await wepy.request({
				url: api['agentLogin'],
				method: 'POST',
				data: {
					uid: wepy.$instance.globalData.myUserInfo.uid,
					cellphone: this.phoneNum,
					user_code: this.codeNum
				}
			})
			if (res.code == 400) {
				this.codeNum = ''
				wx.showToast({
					title: '验证码错误',
					icon: 'none'
				})
				this.$apply()
			} else {
				wx.showToast({title: '经纪人认证成功'})
			}
			resolve()
		})
	}

	methods = {
		close() {
			this.$emit('refresh')
		},
		closeModal() {
			this.showModal = false
		},
		async getCode() {
			// 验证手机号
			if (this.phoneNum && /^1[34578]\d{9}$/.test(this.phoneNum)) {
				console.log('验证通过')
				this.isGetingCode = true
				if (this.isSMSByAgent) {
					// 经纪人发送验证码
					const {code} = await wepy.request({
						url: api['sendAgentCode'],
						method: 'POST',
						data: {
							cellphone: this.phoneNum
						}
					})
					if (code == 400) {
						console.log('faile')
						this.showModal = true
						this.isGetingCode = false
						this.$apply()
						return
					}
				}
				await wepy.request({
					url: api['sendCode'],
					method: 'POST',
					data: {
						mobile: this.phoneNum
					}
				})
				const timer = setInterval(() => {
					if (this.remainTime <= 1) {
						clearInterval(timer)
						this.isGetingCode = false
						this.remainTime = 60
					}
					this.remainTime -= 1
					this.$apply()
				}, 1000)
			} else {
				wx.showToast({
					title: '请输入正确的手机号',
					icon: 'none'
				})
			}
		},
		async login() {
			// 表单校验
			if (!this.phoneNum) {
				wx.showToast({
					title: '请输入手机号',
					icon: 'none'
				})
				return
			}
			if (!this.codeNum) {
				wx.showToast({
					title: '请输入验证码',
					icon: 'none'
				})
				return
			}
			if (this.isSMSByAgent) {
				// 经纪人手机登录
				await this.agentLogin()
			} else {
				// 普通用户手机登录
				await this.userLogin()
			}
			// 更新用户信息
			await getUserInfo()
			this.$emit('refresh')
		},
		onPhoneChange ({detail: {value}}) {
			this.phoneNum = value
		},
		onCodeChange ({detail: {value}}) {
			this.codeNum = value
		}
	}
}
</script>
