<style lang="less">
@import '../styles/base.less';
.canvas {
	width:100%;
	.poster {
		width: 375px;
		height: 600px;
	}
	.canvasImg {
		position: fixed;
		display: flex;
		flex-direction: column;
		width: 550rpx;
		height: 880rpx;
		top: 80rpx;
		left: 110rpx;
		z-index: 2000;
	}
	.shade {
		width: 100%;
		height: 100%;
		position: fixed;
		top: 0;
		left: 0;
		background: #000;
		opacity: 0.2;
		overflow: hidden;
		z-index: 100;
		color: #fff;
	}
	.bar {
		.flex;
		justify-content: space-around;
		position: fixed;
		background: #fff;
		bottom: 0rpx;
		width: 100%;
		height: 180rpx;
		z-index: 2000;
		.item {
			.flex;
			flex-direction: column;
			justify-content: space-around;
			width: 200rpx;
			height: 150rpx;
			image {
				width: 70rpx;
				height: 70rpx;
			}
		}
		&-btn {
			position: absolute;
			width: 200rpx;
			height: 150rpx;
			top: 20rpx;
			opacity: 0;
		}
	}
}
</style>
<template>
<view class="canvas">
	<block wx:if="{{showCanvas}}">
		<canvas class="poster" canvas-id="poster"></canvas>
	</block>
	<block>
		<view class="shade" @tap="closePoster"></view>
		<image src="{{tempFilePath}}" class="canvasImg"></image>
		<view class="bar">
			<view class="item">
				<image src="../images/wxchat.png"></image>
				<button class='bar-btn' open-type="share"></button>
				<text>发送给好友</text>
			</view>
			<view class="item" @tap="saveToAblum">
				<image src="../images/download.png"></image>
				<text>保存卡片</text>
			</view>
		</view>
	</block>
</view>
</template>

<script>
import wepy from 'wepy'
import api from '../utils/api'
export default class Poster extends wepy.component {
	props = {
		house: Object,
		systemInfo: Object
	}
	data = {
		userInfo: {},
		codeUrl: '',
		tempFilePath: '',
		showCanvas: true,
		houseImgs: [],
		isCreated: false
	}

	async getPoster () {
		if (this.isCreated) return
		wx.showLoading({
			title: '急速生成中',
		})
		this.userInfo = wepy.$instance.globalData.myUserInfo
		await this.getQRCode()
		await this.getImagesInfo()
		await this.initCanvas()
		wx.hideLoading()
		this.isCreated = true
		this.$apply()
	}
	async getImagesInfo () {
		return new Promise(async resolve => {
			this.house.headimg = await this.getImageInfo(this.userInfo.headimg)
			this.houseImgs = this.house.photoUrl.slice(0, 4)
			this.houseImgs.forEach(async ele => {
				ele = await this.getImageInfo(ele)
			})
			this.$apply()
			resolve()
		})
	}
	getImageInfo(src) {
		// 转化网络图片，获取路径
		return new Promise(resolve => {
			wx.getImageInfo({
				src: src,
				success: (res) => {
					resolve(res.path)
				}
			})
		})
	}
	initCanvas() {
		return new Promise(resolve => {
			const ctx = wx.createCanvasContext('poster')
			ctx.drawImage(this.house.headimg, 131.5, 549, 35.5, 35.5) // 画经纪人头像
			ctx.drawImage('../images/poster.png', 0, 0, 375, 600)   // 画海报
			ctx.drawImage(this.codeUrl, 155, 400, 65, 65) // 小程序二维码
			ctx.drawImage(this.houseImgs[0], 40, 100, 142, 90) // 画房源图片1
			ctx.drawImage(this.houseImgs[1], 193, 100, 142, 90) // 画房源图片2
			ctx.drawImage(this.houseImgs[2], 40, 200, 142, 90) // 画房源图片3
			ctx.drawImage(this.houseImgs[3], 193, 200, 142, 90) // 画房源图片4
			ctx.drawImage('../images/approve.png', 285, 280, 70, 60) // 画房源认证
			ctx.setFontSize(14)
			ctx.setTextAlign('center')
			ctx.fillText(this.house.title, 187, 320, 250)
			ctx.save()
			// 绘制详情标题
			ctx.setFontSize(12)
			ctx.setFillStyle('#646371')
			ctx.fillText('售价', 84, 362)
			ctx.fillText('房型', 186, 362)
			ctx.fillText('建筑面积', 280, 362)
			ctx.restore()
			ctx.save()
			// 绘制详情内容
			ctx.setFontSize(12)
			ctx.setFillStyle('#ce864c')
			ctx.fillText(`${this.house.sellPrice}`, 84, 382)
			ctx.fillText(`${this.house.countF}室${this.house.countT}厅${this.house.countW}卫`, 186, 382)
			ctx.fillText(`${this.house.square}m²`, 280, 382)
			ctx.restore()
			// 绘制经纪人信息
			ctx.save()
			ctx.setTextAlign('left')
			ctx.setFillStyle('#fff')
			ctx.setFontSize(13)
			ctx.fillText(`${this.house.employeeName1}`, 174, 566)
			// ctx.fillText(this.userInfo.name, 174, 566)
			ctx.restore()
			ctx.save()
			ctx.setFillStyle('#fff')
			ctx.setTextAlign('left')
			ctx.setFontSize(10)
			ctx.fillText(`${this.house.deptName1}`, 174, 580)
			// ctx.fillText(this.userInfo.deptName, 174, 580)
			ctx.restore()
			// 在draw回调里才不会绘制空白
			ctx.draw(false, async (res) => {
				console.log('res')
				await this.saveCanvas()
				this.showCanvas = false
			})
			resolve()
		})
	}
	saveCanvas () {
		return new Promise(resolve => {
			wx.canvasToTempFilePath({
				canvasId: 'poster',
				success: (res) => {
					this.tempFilePath = res.tempFilePath
					console.log(res.tempFilePath)
					this.$apply()
					resolve()
				}
			})
		})
	}
	getQRCode() {
		return new Promise(async resolve => {
			const {data} = await wepy.request({
				url: api['getQRCode'],
				data: {
					agentId: '25'
				}
			})
			this.codeUrl = data
			resolve()
			this.$apply()
		})
	}

	methods = {
		saveToAblum () {
			wx.saveImageToPhotosAlbum({
				filePath: this.tempFilePath,
				success: (res) => {
					console.log('保存成功')
				},
				fail: (err) => {
					console.log('err', err)
					if (err.errMsg == 'saveImageToPhotosAlbum:fail cancel') {
						wx.showToast({
							title: '您已取消保存',
							icon: 'none'
						})
					} else if (err.errMsg == 'saveImageToPhotosAlbum:fail auth deny') {
						wx.showModal({
							title: '提示',
							content: '保存图片失败，您可以点击确定设置获取相册权限后再尝试保存！',
							complete: (res) => {
								console.log(res)
								if (res.confirm) {
									wx.openSetting({}) // 打开小程序设置页面，可以设置权限
								}
							}
						})
					}
				}
			})
		},
		closePoster () {
			this.$emit('closePoster')
		}
	}
}
</script>
